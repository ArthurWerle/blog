---
interface Props {
  delay?: number;
  class?: string;
}

const { delay = 0, class: className = '' } = Astro.props;
---

<div
  class:list={[
    'opacity-0 translate-y-10',
    className
  ]}
  data-animated-section
  style={`transition: opacity 1000ms ease-out ${delay}ms, transform 1000ms ease-out ${delay}ms`}
>
  <slot />
</div>

<style>
  [data-animated-section].in-view {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const sections = document.querySelectorAll('[data-animated-section]');
  
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-view');
          observer.unobserve(entry.target);
        }
      });
    },
    {
      threshold: 0.1,
      rootMargin: '50px',
    }
  );

  sections.forEach((section) => observer.observe(section));
</script>